/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyectofinalprogra2;

import java.awt.Color;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luiss
 */
public class Buscar extends javax.swing.JPanel {

    /**
     * Creates new form Buscar
     */
    
    Color Spoti = new Color(80,206,0,255);
    DefaultTableModel vModeloTabla = new DefaultTableModel();
    DefaultTableModel vModeloTabla2 = new DefaultTableModel();
    

    ArrayList<Cancion> copiaDBCanciones= new ArrayList();
    ArrayList<Cancion> copiaDBRecientes= new ArrayList();
    
    public Buscar() {
        initComponents();
        
        //Settear el placeholder para la busqueda
        TextPrompt placeholder = new TextPrompt("Ingresa el nombre de la cancion o del artista...", txtbuscar);
        placeholder.changeAlpha(0.30f);
        
        
        //Titulos de la tabla
        String titulos[] = {"ID","Nombre", "Artista", "Album","AÃ±o","Genero"};
        vModeloTabla.setColumnIdentifiers(titulos);
        vModeloTabla2.setColumnIdentifiers(titulos);
        
        TablaResultadosArt.setModel(vModeloTabla2);
        TablaResultadosCan.setModel(vModeloTabla);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ResultadosArt = new javax.swing.JLabel();
        txtbuscar = new javax.swing.JTextField();
        panelBuscar = new javax.swing.JPanel();
        btnbuscar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaResultadosArt = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        ResultadosCan = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaResultadosCan = new javax.swing.JTable();
        Paneltodo = new javax.swing.JPanel();
        labelTodo = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        ResultadosArt.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        ResultadosArt.setForeground(new java.awt.Color(255, 255, 255));
        ResultadosArt.setText("Artistas Encontrados");

        txtbuscar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtbuscar.setToolTipText("");
        txtbuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        panelBuscar.setBackground(new java.awt.Color(0, 0, 0));

        btnbuscar.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnbuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnbuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnbuscar.setText("BUSCAR");
        btnbuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnbuscar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnbuscarMouseMoved(evt);
            }
        });
        btnbuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnbuscarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnbuscarMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnbuscarMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnbuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TablaResultadosArt.setBackground(new java.awt.Color(102, 102, 102));
        TablaResultadosArt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TablaResultadosArt.setForeground(new java.awt.Color(255, 255, 255));
        TablaResultadosArt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaResultadosArt.setSelectionBackground(new java.awt.Color(0, 0, 0));
        TablaResultadosArt.setSelectionForeground(new java.awt.Color(80, 206, 0));
        TablaResultadosArt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaResultadosArtMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaResultadosArt);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BUSCAR EN SPOTIFY XELA");

        jSeparator1.setBackground(new java.awt.Color(80, 206, 0));
        jSeparator1.setForeground(new java.awt.Color(80, 206, 0));

        ResultadosCan.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        ResultadosCan.setForeground(new java.awt.Color(255, 255, 255));
        ResultadosCan.setText("Canciones Encontradas");

        TablaResultadosCan.setBackground(new java.awt.Color(102, 102, 102));
        TablaResultadosCan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TablaResultadosCan.setForeground(new java.awt.Color(255, 255, 255));
        TablaResultadosCan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaResultadosCan.setSelectionBackground(new java.awt.Color(0, 0, 0));
        TablaResultadosCan.setSelectionForeground(new java.awt.Color(80, 206, 0));
        TablaResultadosCan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaResultadosCanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaResultadosCan);

        Paneltodo.setBackground(new java.awt.Color(0, 0, 0));

        labelTodo.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        labelTodo.setForeground(new java.awt.Color(255, 255, 255));
        labelTodo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTodo.setText("LISTAR TODO");
        labelTodo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelTodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelTodoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelTodoMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PaneltodoLayout = new javax.swing.GroupLayout(Paneltodo);
        Paneltodo.setLayout(PaneltodoLayout);
        PaneltodoLayout.setHorizontalGroup(
            PaneltodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneltodoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTodo, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );
        PaneltodoLayout.setVerticalGroup(
            PaneltodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaneltodoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelTodo)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ResultadosCan, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ResultadosArt, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1104, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Paneltodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(panelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel2))))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Paneltodo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResultadosCan, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResultadosArt, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbuscarMouseClicked
        
        //estetica
        panelBuscar.setBackground(Spoti);
        //fin
        
        String busqueda= txtbuscar.getText().trim();
        String limite="";
        int largobus= busqueda.length();
        
        txtbuscar.setText("");
        
        copiaDBCanciones= DatosGlobales.getdbCanciones();
        String datos[] = new String[6];
        
        fnRemoveFilasTabla();
        
        if (largobus>0) {
            
            ResultadosCan.setText("Canciones Encontradas con '"+busqueda+"'");
            ResultadosArt.setText("Artistas Encontrados con '"+busqueda+"'");
            
            
            
            for (Cancion copia: copiaDBCanciones) 
            {
                if (largobus>copia.getNombre().length()) 
                {
                    limite= copia.getNombre();
                }
                else
                {
                    limite= copia.getNombre().substring(0,largobus);
                }
                 
                 //JOptionPane.showMessageDialog(null, "Largo: "+largobus+"/ String: "+limite);
                
                if (limite.equals(busqueda)== true) {
                    datos[0]=String.valueOf(copia.getIDcancion());
                    datos[1]=copia.getNombre();
                    datos[2]=copia.getArtista();
                    datos[3]=copia.getAlbum();
                    datos[4]=String.valueOf(copia.getAnio());
                    datos[5]=copia.getGenero();

                    vModeloTabla.addRow(datos);
                }
                
                //Buscar artista
                if (largobus>copia.getArtista().length()) 
                {
                    limite= copia.getArtista();
                }
                else
                {
                    limite= copia.getArtista().substring(0,largobus);
                }
                 
                  //JOptionPane.showMessageDialog(null, "Largo: "+largobus+"/ String: "+limite);
                
                if (limite.equals(busqueda)== true) {
                    datos[0]=String.valueOf(copia.getIDcancion());
                    datos[1]=copia.getNombre();
                    datos[2]=copia.getArtista();
                    datos[3]=copia.getAlbum();
                    datos[4]=String.valueOf(copia.getAnio());
                    datos[5]=copia.getGenero();

                    vModeloTabla2.addRow(datos);
                }
            }
        }
        else
        {
            for (Cancion copia: copiaDBCanciones)
            {
                    datos[0]=String.valueOf(copia.getIDcancion());
                    datos[1]=copia.getNombre();
                    datos[2]=copia.getArtista();
                    datos[3]=copia.getAlbum();
                    datos[4]=String.valueOf(copia.getAnio());
                    datos[5]=copia.getGenero();
                    
                    vModeloTabla2.addRow(datos);
                    vModeloTabla.addRow(datos);
            }
        }
        
        
    }//GEN-LAST:event_btnbuscarMouseClicked

    private void btnbuscarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbuscarMouseMoved

    }//GEN-LAST:event_btnbuscarMouseMoved

    private void btnbuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbuscarMouseExited
        panelBuscar.setBackground(Color.BLACK);
    }//GEN-LAST:event_btnbuscarMouseExited

    private void btnbuscarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbuscarMouseReleased

    }//GEN-LAST:event_btnbuscarMouseReleased

    private void labelTodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelTodoMouseClicked
        Paneltodo.setBackground(Spoti);
        
        fnRemoveFilasTabla();
        ResultadosCan.setText("Todas las canciones encontradas");
        ResultadosArt.setText("Todos los artistas encontrados");
        txtbuscar.setText("");
        copiaDBCanciones= DatosGlobales.getdbCanciones();
        String datos[] = new String[6];
        
        for (Cancion copia: copiaDBCanciones)
            {
                    datos[0]=String.valueOf(copia.getIDcancion());
                    datos[1]=copia.getNombre();
                    datos[2]=copia.getArtista();
                    datos[3]=copia.getAlbum();
                    datos[4]=String.valueOf(copia.getAnio());
                    datos[5]=copia.getGenero();
                    
                    vModeloTabla2.addRow(datos);
                    vModeloTabla.addRow(datos);
            }
        
        
    }//GEN-LAST:event_labelTodoMouseClicked

    private void labelTodoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelTodoMouseExited
        Paneltodo.setBackground(Color.BLACK);
    }//GEN-LAST:event_labelTodoMouseExited

    private void TablaResultadosCanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaResultadosCanMouseClicked
        TablaResultadosArt.clearSelection();
        int selectedrow= TablaResultadosCan.getSelectedRow();
        String seleccionado= String.valueOf(vModeloTabla.getValueAt(selectedrow, 0));
        
        int SelectedIndex= Integer.parseInt(seleccionado)-1;
        //Selected Index es ahora la posicion de la cancion en en el array DB
        
        //Seleccionar cancion y reproducirla
        copiaDBCanciones= DatosGlobales.getdbCanciones();
        Cancion copiaseleccion= new Cancion();
        copiaseleccion= copiaDBCanciones.get(SelectedIndex);
        
        copiaDBRecientes=DatosGlobales.getdbRecientes();
        
        Cancion pos0=new Cancion();
        Cancion pos1=new Cancion();
        Cancion pos2=new Cancion();
        Cancion pos3= new Cancion();
        
        pos0= copiaDBRecientes.get(0);
        pos1= copiaDBRecientes.get(1);
        pos2= copiaDBRecientes.get(2);
        pos3= copiaDBRecientes.get(3);
        
        int idcopia=copiaseleccion.getIDcancion();
        int id0=pos0.getIDcancion();
        int id1=pos1.getIDcancion();
        int id2=pos2.getIDcancion();        
        int id3=pos3.getIDcancion();
        
        //Comprobar que la cancion a reproducir sea diferente a las que ya estan en el arrayRecientes
        if ((idcopia!=id0)&&(idcopia!=id1)&&(idcopia!=id2)&&(idcopia!=id3) ) 
        {
            copiaDBRecientes.clear();

            copiaDBRecientes.add(copiaseleccion);
            copiaDBRecientes.add(pos0);
            copiaDBRecientes.add(pos1);
            copiaDBRecientes.add(pos2);

            DatosGlobales.setdbRecientes(copiaDBRecientes);
        }
        
        //Ingresar la cancion a reproducir
        DatosGlobales.setCancionSeleccionada(copiaseleccion);
        
        //Mostar reproductor
        Reproductor repro= new Reproductor();
        repro.setVisible(true);
        repro.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        
    }//GEN-LAST:event_TablaResultadosCanMouseClicked

    private void TablaResultadosArtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaResultadosArtMouseClicked
        TablaResultadosCan.clearSelection();
        int selectedrow= TablaResultadosArt.getSelectedRow();
        String seleccionado= String.valueOf(vModeloTabla2.getValueAt(selectedrow, 0));
        
        int SelectedIndex= Integer.parseInt(seleccionado)-1;
        //Selected Index es ahora la posicion de la cancion en en el array DB
        
        //Seleccionar cancion y reproducirla
        copiaDBCanciones= DatosGlobales.getdbCanciones();
        Cancion copiaseleccion= new Cancion();
        copiaseleccion= copiaDBCanciones.get(SelectedIndex);
        
        copiaDBRecientes=DatosGlobales.getdbRecientes();
        
        Cancion pos0=new Cancion();
        Cancion pos1=new Cancion();
        Cancion pos2=new Cancion();
        Cancion pos3= new Cancion();
        
        pos0= copiaDBRecientes.get(0);
        pos1= copiaDBRecientes.get(1);
        pos2= copiaDBRecientes.get(2);
        pos3= copiaDBRecientes.get(3);
        
        int idcopia=copiaseleccion.getIDcancion();
        int id0=pos0.getIDcancion();
        int id1=pos1.getIDcancion();
        int id2=pos2.getIDcancion();        
        int id3=pos3.getIDcancion();
        
        //Comprobar que la cancion a reproducir sea diferente a las que ya estan en el arrayRecientes
        if ((idcopia!=id0)&&(idcopia!=id1)&&(idcopia!=id2)&&(idcopia!=id3) ) 
        {
            copiaDBRecientes.clear();

            copiaDBRecientes.add(copiaseleccion);
            copiaDBRecientes.add(pos0);
            copiaDBRecientes.add(pos1);
            copiaDBRecientes.add(pos2);

            DatosGlobales.setdbRecientes(copiaDBRecientes);
        }
        
        DatosGlobales.setCancionSeleccionada(copiaseleccion);
        
        //Mostar reproductor
        Reproductor repro= new Reproductor();
        repro.setVisible(true);
        repro.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        
    }//GEN-LAST:event_TablaResultadosArtMouseClicked
    
    
    //Voids utiles
    public void SetImageLabel(JLabel label, String root) {
        ImageIcon image = new ImageIcon(root);
        Icon icon = new ImageIcon(image.getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_DEFAULT));
        label.setIcon(icon);
        this.repaint();
    }
    
    private void fnRemoveFilasTabla() {
        if (vModeloTabla.getRowCount() > 0) {
            for (int i = vModeloTabla.getRowCount() - 1; i > -1; i--) {
                vModeloTabla.removeRow(i);
            }
        }
        
        if (vModeloTabla2.getRowCount() > 0) {
            for (int i = vModeloTabla2.getRowCount() - 1; i > -1; i--) {
                vModeloTabla2.removeRow(i);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Paneltodo;
    private javax.swing.JLabel ResultadosArt;
    private javax.swing.JLabel ResultadosCan;
    private javax.swing.JTable TablaResultadosArt;
    private javax.swing.JTable TablaResultadosCan;
    private javax.swing.JLabel btnbuscar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelTodo;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
}
